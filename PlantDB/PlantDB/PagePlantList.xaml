<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:PlantDB"
             xmlns:viewmodel="clr-namespace:PlantDB.Data"
             x:Class="PlantDB.PagePlantList"
             Title="List"
             BindingContext="{x:Static local:App.PlantData}">

    <ContentPage.Padding>
        <OnPlatform x:TypeArguments="Thickness" iOS="0, 20, 0, 0" WinPhone="0,5,5,10" Android="5,5,5,5"/>
    </ContentPage.Padding>

    <ContentPage.Resources>
        <ResourceDictionary>
            <local:IntToStringConverter x:Key="ColorIfInList" 
                                        PosText="#388E3C"
                                        ZeroText="#212121"/>
            <local:PlantIDToStringConverter x:Key="ContextMenuText" 
                                            RemoveText="Remove from Cart"
                                            AddText="Add to Cart"/>
            <!--<tools:ListToBoolConverter           x:Key="listToBoolConverter" />
            <tools:ListToBoolConverterOpposite   x:Key="listToBoolConverterOpposite" />
            <tools:ObjectToBoolConverter         x:Key="objectToBoolConverter" />
            <tools:ObjectToBoolConverterOpposite x:Key="objectToBoolConverterOpposite" />
            <tools:NumberToBoolConverter         x:Key="numberToBoolConverter" />
            <tools:PlantTypeToStringConverter    x:Key="plantTypeToStringConverter" />

            <tools:BoolToStringConverter x:Key="AddRemoveCartText" 
                                         TrueText="Remove from cart"
                                         FalseText="Add to cart"/>

-->
        </ResourceDictionary>
    </ContentPage.Resources>
    
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <StackLayout>
            <Label Text="{Binding PlantCount, StringFormat = '{0} matches'}"
                   Style="{StaticResource H1Style}"/>
            <StackLayout Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                         Orientation="Horizontal"
                         HorizontalOptions="Center">
                <Button x:Name="AllPlants"
                        Text="All Plants"
                        Command="{Binding ShowAllPlantsCmd}"/>
                <Button x:Name="SomePlants"
                        Text="Some Plants"
                        Command="{Binding ShowSomePlantsCmd}"
                        CommandParameter="Dec"/>
                <Button x:Name="ShowCartPlants"
                        Text="Show Cart Plants"
                        Command="{Binding ShowCartPlantsCmd}"/>
                <Button x:Name="EmptyCart"
                        Text="Empty Cart"
                        Command="{Binding EmptyCartCmd}"/>
            </StackLayout>
        </StackLayout>

        <StackLayout Grid.Row="1" Grid.Column="0">
            <ListView x:Name="PlantsListView"
                      ItemsSource="{Binding PlantList}"
                      SeparatorVisibility="None"
                      BackgroundColor="{DynamicResource dividerColor}"
                      HasUnevenRows="True">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <TextCell x:Name="textCell"
                                  Text="{Binding PlantName}"
                                  TextColor="{Binding InCart, Converter={StaticResource ColorIfInList}}">
                            <TextCell.ContextActions>
                                <MenuItem Text="{Binding InCart, Converter={StaticResource ContextMenuText}}"
                                          Command="{Binding Source={x:Static local:App.PlantData}, Path=TogglePlantCartStatusCmd}"
                                          CommandParameter="{Binding Source={x:Reference PlantsListView}, Path=SelectedItem}"/>
                            </TextCell.ContextActions>
                            
<!--                        If I need to use a ViewCell to create a custom layout, then this is the outline of what I had before.
                            But note that the docs say ViewCell is a lot worse on perf, so try to stick with TextCell or ImageCell.
                            <StackLayout Orientation="Horizontal">
                                <Label Text="{Binding PlantName}"
                                       TextColor="{Binding InCart, Converter={StaticResource ColorIfInList}}"/>
                            </StackLayout>-->
                        </TextCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </StackLayout>

        <StackLayout Grid.Row="1" Grid.Column="1">
            <StackLayout x:Name="PlantDetailLayout" 
                         BindingContext="{Binding Source={x:Reference PlantsListView}, Path=SelectedItem}">
                <Label Text="{Binding PlantName}"/>
                <Label Text="{Binding ScientificName}"/>
                <Label Text="{Binding Type}"/>
                <Label Text="{Binding FloweringMonths}"/>
                <Label Text="{Binding Sun}"/>
            </StackLayout>

            <Button Text="Toggle Cart Status"
                    Command="{Binding TogglePlantCartStatusCmd}"
                    CommandParameter="{Binding Source={x:Reference PlantsListView}, Path=SelectedItem}"/>
        </StackLayout>
    </Grid>

</ContentPage>